{
  "annotations": [
    {
      "start": 2296,
      "end": 2320,
      "document": "import React, { useEffect, useState } from \"react\";\nimport \"./input.css\";\n\nfunction App() {\n  const [input, setInput] = useState({\n    code: \"\",\n    number: \"\",\n    date: \"\",\n  });\n  const [data, setData] = useState({\n    prediction: \"\",\n    error_msg: \"\",\n  });\n\n  const [showErrorBox, setShowErrorBox] = useState(false);\n  const [prediction, setPrediction] = useState({\n    showBox: false,\n    data: \"\",\n  });\n\n  useEffect(() => {}, [showErrorBox]);\n\n  useEffect(() => {\n    if (data.prediction !== \"\") {\n      setPrediction({\n        showBox: true,\n        predictionNumber: data.prediction,\n      });\n    }\n  }, [data]);\n\n  function doCodeChange(evt) {\n    setInput({\n      code: evt.target.value,\n      number: input.number,\n      date: input.date,\n    });\n  }\n\n  function doFlightChange(evt) {\n    setInput({\n      code: input.code,\n      number: evt.target.value,\n      date: input.date,\n    });\n  }\n\n  function doDateChange(evt) {\n    setInput({\n      code: input.code,\n      number: input.number,\n      date: evt.target.value,\n    });\n  }\n\n  function doSubmitResp(res) {\n    if (res.status === 200) {\n      res\n        .json()\n        .then(doSubmitJson)\n        .catch(() => doSubmitError(\"200 response not JSON\"));\n    } else {\n      doSubmitError(`bad status code ${res.status}`);\n    }\n  }\n\n  function doSubmitJson(json) {\n    if (json[\"error_msg\"] !== undefined) {\n      setData({\n        prediction: \"\",\n        error_msg: json[\"error_msg\"],\n      });\n      setShowErrorBox(true);\n    } else {\n      setData({\n        prediction: json[\"prediction\"],\n        error_msg: \"\",\n      });\n      setPrediction({});\n      setShowErrorBox(false);\n    }\n  }\n\n  function doSubmitError(msg) {\n    if (typeof msg !== \"string\") {\n      setData({\n        error_msg: \"Couldn't fetch from server\",\n        prediction: \"\",\n      });\n    }\n    setData({\n      error_msg: msg,\n      prediction: \"\",\n    });\n  }\n\n  function validDate(date) {\n    // Valid format: YYYY-MM-DD\n    if (date.length !== 10) {\n      return false;\n    } else if (date.substring(4, 5) !== \"-\") {\n      return false;\n    } else if (date.substring(7, 8) !== \"-\") {\n      return false;\n    } else if (date.substring(0, 4) > 2024) {\n      return false;\n    } else if (date.substring(0, 4) < 0) {\n      return false;\n    } else if (date.substring(5, 7) > 12 || date.substring(5, 7) < 1) {\n      return false;\n    } else if (date.substring(8, 10) > 31 || date.substring(8, 10) < 1) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  function doSubmitClick(evt) {\n    evt.preventDefault();\n    if (input.code === \"\" || input.number === \"\" || input.date === \"\") {\n      doSubmitError(\"Please input all values\");\n      setShowErrorBox(true);\n      return;\n    }\n    if (input.code.length !== 2) {\n      doSubmitError(\"Invalid carrier code\");\n      setShowErrorBox(true);\n      return;\n    }\n    if (input.number.length > 4 || input.number.length < 1) {\n      doSubmitError(\"Invalid flight number\");\n      setShowErrorBox(true);\n      return;\n    }\n    if (!validDate(input.date)) {\n      doSubmitError(\"Please enter a valid date\");\n      setShowErrorBox(true);\n      return;\n    }\n    fetch(\n      `http://localhost:8088/predict?number=${input.number}&carrier=${input.code}&date=${input.date}`\n    )\n      .then(doSubmitResp)\n      .catch(doSubmitError);\n  }\n\n  function hidePrediction() {\n    setPrediction({\n      showBox: false,\n      prediction: \"\",\n    });\n  }\n\n  function getBoxColor(num) {\n    switch (num) {\n      default:\n        return \"bg-green-300\";\n      case 1:\n      case 2:\n        return \"bg-yellow-200\";\n      case 3:\n        return \"bg-orange-200\";\n      case 4:\n        return \"bg-red-300\";\n    }\n  }\n\n  function getTextColor(num) {\n    switch (num) {\n      default:\n        return \"text-green-600\";\n      case 1:\n      case 2:\n        return \"text-yellow-500\";\n      case 3:\n        return \"text-orange-500\";\n      case 4:\n        return \"text-red-600\";\n    }\n  }\n\n  function getCloseColor(num) {\n    switch (num) {\n      default:\n        return \"text-green-500\";\n      case 1:\n      case 2:\n        return \"text-yellow-400\";\n      case 3:\n        return \"text-orange-400\";\n      case 4:\n        return \"text-red-500\";\n    }\n  }\n\n  function handlePredictionText(prediction) {\n    if (prediction === 0) {\n      return \"No delay predicted\";\n    }\n    if (prediction === 1) {\n      return \"0-15 minute delay\";\n    }\n    if (prediction === 2) {\n      return \"15-30 minute delay\";\n    }\n    if (prediction === 3) {\n      return \"30-60 minute delay\";\n    }\n    if (prediction === 4) {\n      return \"60+ minute delay\";\n    }\n  }\n\n  return (\n    <div className=\"flex justify-center items-center flex-col mt-20\">\n      <h1 className=\"mb-5 font-semibold text-lg\">FlightBuddy ✈️</h1>\n      {showErrorBox ? (\n        <div\n          className=\"bg-red-100  text-red-700 px-4 py-3 rounded relative w-80 mb-5\"\n          role=\"alert\"\n        >\n          <strong className=\"font-bold\">Error:</strong>\n          <span className=\"block sm:inline\"> {data.error_msg}</span>\n          <span className=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\n            <svg\n              onClick={() => setShowErrorBox(false)}\n              className=\"fill-current h-6 w-6 text-red-500\"\n              role=\"button\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n            >\n              <title>Close</title>\n              <path d=\"M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z\" />\n            </svg>\n          </span>\n        </div>\n      ) : (\n        <div></div>\n      )}\n      <form>\n        <div className=\"w-80\">\n          <div className=\"relative w-full min-w-[200px] h-10\">\n            <input\n              className=\"peer w-full h-full bg-gray-100 text-blue-gray-700 font-sans font-normal outline outline-0 focus:outline-0 disabled:bg-blue-gray-50 disabled:border-0 transition-all placeholder-shown:border placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 border focus:border-2 border-t-transparent focus:border-t-transparent text-sm px-3 py-2.5 rounded-[7px] border-blue-gray-200 focus:border-gray-600 shadow-sm\"\n              placeholder=\" \"\n              onChange={(evt) => doCodeChange(evt)}\n              type=\"text\"\n              value={input.code}\n            />\n            <label className=\"flex w-full h-full select-none pointer-events-none absolute left-0 font-normal !overflow-visible truncate peer-placeholder-shown:text-blue-gray-500 leading-tight peer-focus:leading-tight peer-disabled:text-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500 transition-all -top-1.5 peer-placeholder-shown:text-sm text-[11px] peer-focus:text-[11px] before:content[' '] before:block before:box-border before:w-2.5 before:h-1.5 before:mt-[6.5px] before:mr-1 peer-placeholder-shown:before:border-transparent before:rounded-tl-md before:border-t peer-focus:before:border-t-2 before:border-l peer-focus:before:border-l-2 before:pointer-events-none before:transition-all peer-disabled:before:border-transparent after:content[' '] after:block after:flex-grow after:box-border after:w-2.5 after:h-1.5 after:mt-[6.5px] after:ml-1 peer-placeholder-shown:after:border-transparent after:rounded-tr-md after:border-t peer-focus:after:border-t-2 after:border-r peer-focus:after:border-r-2 after:pointer-events-none after:transition-all peer-disabled:after:border-transparent peer-placeholder-shown:leading-[3.75] text-gray-500 peer-focus:text-gray-900 before:border-blue-gray-200 peer-focus:before:!border-gray-900 after:border-blue-gray-200 peer-focus:after:!border-gray-900\">\n              IATA Carrier Code\n            </label>\n          </div>\n        </div>\n        <br></br>\n        <div className=\"w-80\">\n          <div className=\"relative w-full min-w-[200px] h-10\">\n            <input\n              className=\"peer w-full h-full bg-gray-100 text-blue-gray-700 font-sans font-normal outline outline-0 focus:outline-0 disabled:bg-blue-gray-50 disabled:border-0 transition-all placeholder-shown:border placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 border focus:border-2 border-t-transparent focus:border-t-transparent text-sm px-3 py-2.5 rounded-[7px] border-blue-gray-200 focus:border-gray-600 shadow-sm\"\n              placeholder=\" \"\n              onChange={(evt) => doFlightChange(evt)}\n              type=\"text\"\n              value={input.number}\n            />\n            <label className=\"flex w-full h-full select-none pointer-events-none absolute left-0 font-normal !overflow-visible truncate peer-placeholder-shown:text-blue-gray-500 leading-tight peer-focus:leading-tight peer-disabled:text-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500 transition-all -top-1.5 peer-placeholder-shown:text-sm text-[11px] peer-focus:text-[11px] before:content[' '] before:block before:box-border before:w-2.5 before:h-1.5 before:mt-[6.5px] before:mr-1 peer-placeholder-shown:before:border-transparent before:rounded-tl-md before:border-t peer-focus:before:border-t-2 before:border-l peer-focus:before:border-l-2 before:pointer-events-none before:transition-all peer-disabled:before:border-transparent after:content[' '] after:block after:flex-grow after:box-border after:w-2.5 after:h-1.5 after:mt-[6.5px] after:ml-1 peer-placeholder-shown:after:border-transparent after:rounded-tr-md after:border-t peer-focus:after:border-t-2 after:border-r peer-focus:after:border-r-2 after:pointer-events-none after:transition-all peer-disabled:after:border-transparent peer-placeholder-shown:leading-[3.75] text-gray-500 peer-focus:text-gray-900 before:border-blue-gray-200 peer-focus:before:!border-gray-900 after:border-blue-gray-200 peer-focus:after:!border-gray-900\">\n              Flight Number\n            </label>\n          </div>\n        </div>\n        <br></br>\n        <div className=\"relative w-full min-w-[200px] h-10\">\n          <input\n            className=\"peer w-full h-full bg-gray-100 text-blue-gray-700 font-sans font-normal outline outline-0 focus:outline-0 disabled:bg-blue-gray-50 disabled:border-0 transition-all placeholder-shown:border placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 border focus:border-2 border-t-transparent focus:border-t-transparent text-sm px-3 py-2.5 rounded-[7px] border-blue-gray-200 focus:border-gray-600 shadow-sm\"\n            placeholder=\"\"\n            onChange={(evt) => doDateChange(evt)}\n            type=\"text\"\n            value={input.date}\n          />\n          <label className=\"flex w-full h-full select-none pointer-events-none absolute left-0 font-normal !overflow-visible truncate peer-placeholder-shown:text-blue-gray-500 leading-tight peer-focus:leading-tight peer-disabled:text-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500 transition-all -top-1.5 peer-placeholder-shown:text-sm text-[11px] peer-focus:text-[11px] before:content[' '] before:block before:box-border before:w-2.5 before:h-1.5 before:mt-[6.5px] before:mr-1 peer-placeholder-shown:before:border-transparent before:rounded-tl-md before:border-t peer-focus:before:border-t-2 before:border-l peer-focus:before:border-l-2 before:pointer-events-none before:transition-all peer-disabled:before:border-transparent after:content[' '] after:block after:flex-grow after:box-border after:w-2.5 after:h-1.5 after:mt-[6.5px] after:ml-1 peer-placeholder-shown:after:border-transparent after:rounded-tr-md after:border-t peer-focus:after:border-t-2 after:border-r peer-focus:after:border-r-2 after:pointer-events-none after:transition-all peer-disabled:after:border-transparent peer-placeholder-shown:leading-[3.75] text-gray-500 peer-focus:text-gray-900 before:border-blue-gray-200 peer-focus:before:!border-gray-900 after:border-blue-gray-200 peer-focus:after:!border-gray-900\">\n            Flight Date (YYYY-MM-DD)\n          </label>\n        </div>\n        <br></br>\n        <button\n          type=\"submit\"\n          className=\"shadow-sm inline-block px-5 py-2 mx-auto text-white bg-blue-500 rounded-full hover:bg-blue-600 md:mx-0 font-semibold w-full\"\n          onClick={(evt) => doSubmitClick(evt)}\n          value=\"Submit\"\n        >\n          Submit\n        </button>\n      </form>\n      {prediction.showBox ? (\n        <div\n          className={`absolute pl-5 ${getBoxColor(\n            prediction.predictionNumber\n          )} bg-opacity-100 w-96 rounded-md h-20 flex justify-between items-center`}\n        >\n          <p\n            className={`font-medium ${getTextColor(\n              prediction.predictionNumber\n            )}`}\n          >\n            {handlePredictionText(prediction.predictionNumber)}\n          </p>\n          <svg\n            onClick={hidePrediction}\n            className={`fill-current h-6 w-6 ${getCloseColor(\n              prediction.predictionNumber\n            )} mx-5`}\n            role=\"button\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\"\n          >\n            <title>Close</title>\n            <path d=\"M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z\" />\n          </svg>\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n",
      "tool": "runCodeSegment",
      "metadata": {
        "code": "\"YYYY-MM-DD\".substring(5, 7)",
        "response": "MM"
      },
      "original": {
        "document": "import React, { useEffect, useState } from \"react\";\nimport \"./input.css\";\n\nfunction App() {\n  const [input, setInput] = useState({\n    code: \"\",\n    number: \"\",\n    date: \"\",\n  });\n  const [data, setData] = useState({\n    prediction: \"\",\n    error_msg: \"\",\n  });\n\n  const [showErrorBox, setShowErrorBox] = useState(false);\n  const [prediction, setPrediction] = useState({\n    showBox: false,\n    data: \"\",\n  });\n\n  useEffect(() => {}, [showErrorBox]);\n\n  useEffect(() => {\n    if (data.prediction !== \"\") {\n      setPrediction({\n        showBox: true,\n        predictionNumber: data.prediction,\n      });\n    }\n  }, [data]);\n\n  function doCodeChange(evt) {\n    setInput({\n      code: evt.target.value,\n      number: input.number,\n      date: input.date,\n    });\n  }\n\n  function doFlightChange(evt) {\n    setInput({\n      code: input.code,\n      number: evt.target.value,\n      date: input.date,\n    });\n  }\n\n  function doDateChange(evt) {\n    setInput({\n      code: input.code,\n      number: input.number,\n      date: evt.target.value,\n    });\n  }\n\n  function doSubmitResp(res) {\n    if (res.status === 200) {\n      res\n        .json()\n        .then(doSubmitJson)\n        .catch(() => doSubmitError(\"200 response not JSON\"));\n    } else {\n      doSubmitError(`bad status code ${res.status}`);\n    }\n  }\n\n  function doSubmitJson(json) {\n    if (json[\"error_msg\"] !== undefined) {\n      setData({\n        prediction: \"\",\n        error_msg: json[\"error_msg\"],\n      });\n      setShowErrorBox(true);\n    } else {\n      setData({\n        prediction: json[\"prediction\"],\n        error_msg: \"\",\n      });\n      setPrediction({});\n      setShowErrorBox(false);\n    }\n  }\n\n  function doSubmitError(msg) {\n    if (typeof msg !== \"string\") {\n      setData({\n        error_msg: \"Couldn't fetch from server\",\n        prediction: \"\",\n      });\n    }\n    setData({\n      error_msg: msg,\n      prediction: \"\",\n    });\n  }\n\n  function validDate(date) {\n    // Valid format: YYYY-MM-DD\n    if (date.length !== 10) {\n      return false;\n    } else if (date.substring(4, 5) !== \"-\") {\n      return false;\n    } else if (date.substring(7, 8) !== \"-\") {\n      return false;\n    } else if (date.substring(0, 4) > 2024) {\n      return false;\n    } else if (date.substring(0, 4) < 0) {\n      return false;\n    } else if (date.substring(5, 7) > 12 || date.substring(5, 7) < 1) {\n      return false;\n    } else if (date.substring(8, 10) > 31 || date.substring(8, 10) < 1) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  function doSubmitClick(evt) {\n    evt.preventDefault();\n    if (input.code === \"\" || input.number === \"\" || input.date === \"\") {\n      doSubmitError(\"Please input all values\");\n      setShowErrorBox(true);\n      return;\n    }\n    if (input.code.length !== 2) {\n      doSubmitError(\"Invalid carrier code\");\n      setShowErrorBox(true);\n      return;\n    }\n    if (input.number.length > 4 || input.number.length < 1) {\n      doSubmitError(\"Invalid flight number\");\n      setShowErrorBox(true);\n      return;\n    }\n    if (!validDate(input.date)) {\n      doSubmitError(\"Please enter a valid date\");\n      setShowErrorBox(true);\n      return;\n    }\n    fetch(\n      `http://localhost:8088/predict?number=${input.number}&carrier=${input.code}&date=${input.date}`\n    )\n      .then(doSubmitResp)\n      .catch(doSubmitError);\n  }\n\n  function hidePrediction() {\n    setPrediction({\n      showBox: false,\n      prediction: \"\",\n    });\n  }\n\n  function getBoxColor(num) {\n    switch (num) {\n      default:\n        return \"bg-green-300\";\n      case 1:\n      case 2:\n        return \"bg-yellow-200\";\n      case 3:\n        return \"bg-orange-200\";\n      case 4:\n        return \"bg-red-300\";\n    }\n  }\n\n  function getTextColor(num) {\n    switch (num) {\n      default:\n        return \"text-green-600\";\n      case 1:\n      case 2:\n        return \"text-yellow-500\";\n      case 3:\n        return \"text-orange-500\";\n      case 4:\n        return \"text-red-600\";\n    }\n  }\n\n  function getCloseColor(num) {\n    switch (num) {\n      default:\n        return \"text-green-500\";\n      case 1:\n      case 2:\n        return \"text-yellow-400\";\n      case 3:\n        return \"text-orange-400\";\n      case 4:\n        return \"text-red-500\";\n    }\n  }\n\n  function handlePredictionText(prediction) {\n    if (prediction === 0) {\n      return \"No delay predicted\";\n    }\n    if (prediction === 1) {\n      return \"0-15 minute delay\";\n    }\n    if (prediction === 2) {\n      return \"15-30 minute delay\";\n    }\n    if (prediction === 3) {\n      return \"30-60 minute delay\";\n    }\n    if (prediction === 4) {\n      return \"60+ minute delay\";\n    }\n  }\n\n  return (\n    <div className=\"flex justify-center items-center flex-col mt-20\">\n      <h1 className=\"mb-5 font-semibold text-lg\">FlightBuddy ✈️</h1>\n      {showErrorBox ? (\n        <div\n          className=\"bg-red-100  text-red-700 px-4 py-3 rounded relative w-80 mb-5\"\n          role=\"alert\"\n        >\n          <strong className=\"font-bold\">Error:</strong>\n          <span className=\"block sm:inline\"> {data.error_msg}</span>\n          <span className=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\n            <svg\n              onClick={() => setShowErrorBox(false)}\n              className=\"fill-current h-6 w-6 text-red-500\"\n              role=\"button\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n            >\n              <title>Close</title>\n              <path d=\"M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z\" />\n            </svg>\n          </span>\n        </div>\n      ) : (\n        <div></div>\n      )}\n      <form>\n        <div className=\"w-80\">\n          <div className=\"relative w-full min-w-[200px] h-10\">\n            <input\n              className=\"peer w-full h-full bg-gray-100 text-blue-gray-700 font-sans font-normal outline outline-0 focus:outline-0 disabled:bg-blue-gray-50 disabled:border-0 transition-all placeholder-shown:border placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 border focus:border-2 border-t-transparent focus:border-t-transparent text-sm px-3 py-2.5 rounded-[7px] border-blue-gray-200 focus:border-gray-600 shadow-sm\"\n              placeholder=\" \"\n              onChange={(evt) => doCodeChange(evt)}\n              type=\"text\"\n              value={input.code}\n            />\n            <label className=\"flex w-full h-full select-none pointer-events-none absolute left-0 font-normal !overflow-visible truncate peer-placeholder-shown:text-blue-gray-500 leading-tight peer-focus:leading-tight peer-disabled:text-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500 transition-all -top-1.5 peer-placeholder-shown:text-sm text-[11px] peer-focus:text-[11px] before:content[' '] before:block before:box-border before:w-2.5 before:h-1.5 before:mt-[6.5px] before:mr-1 peer-placeholder-shown:before:border-transparent before:rounded-tl-md before:border-t peer-focus:before:border-t-2 before:border-l peer-focus:before:border-l-2 before:pointer-events-none before:transition-all peer-disabled:before:border-transparent after:content[' '] after:block after:flex-grow after:box-border after:w-2.5 after:h-1.5 after:mt-[6.5px] after:ml-1 peer-placeholder-shown:after:border-transparent after:rounded-tr-md after:border-t peer-focus:after:border-t-2 after:border-r peer-focus:after:border-r-2 after:pointer-events-none after:transition-all peer-disabled:after:border-transparent peer-placeholder-shown:leading-[3.75] text-gray-500 peer-focus:text-gray-900 before:border-blue-gray-200 peer-focus:before:!border-gray-900 after:border-blue-gray-200 peer-focus:after:!border-gray-900\">\n              IATA Carrier Code\n            </label>\n          </div>\n        </div>\n        <br></br>\n        <div className=\"w-80\">\n          <div className=\"relative w-full min-w-[200px] h-10\">\n            <input\n              className=\"peer w-full h-full bg-gray-100 text-blue-gray-700 font-sans font-normal outline outline-0 focus:outline-0 disabled:bg-blue-gray-50 disabled:border-0 transition-all placeholder-shown:border placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 border focus:border-2 border-t-transparent focus:border-t-transparent text-sm px-3 py-2.5 rounded-[7px] border-blue-gray-200 focus:border-gray-600 shadow-sm\"\n              placeholder=\" \"\n              onChange={(evt) => doFlightChange(evt)}\n              type=\"text\"\n              value={input.number}\n            />\n            <label className=\"flex w-full h-full select-none pointer-events-none absolute left-0 font-normal !overflow-visible truncate peer-placeholder-shown:text-blue-gray-500 leading-tight peer-focus:leading-tight peer-disabled:text-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500 transition-all -top-1.5 peer-placeholder-shown:text-sm text-[11px] peer-focus:text-[11px] before:content[' '] before:block before:box-border before:w-2.5 before:h-1.5 before:mt-[6.5px] before:mr-1 peer-placeholder-shown:before:border-transparent before:rounded-tl-md before:border-t peer-focus:before:border-t-2 before:border-l peer-focus:before:border-l-2 before:pointer-events-none before:transition-all peer-disabled:before:border-transparent after:content[' '] after:block after:flex-grow after:box-border after:w-2.5 after:h-1.5 after:mt-[6.5px] after:ml-1 peer-placeholder-shown:after:border-transparent after:rounded-tr-md after:border-t peer-focus:after:border-t-2 after:border-r peer-focus:after:border-r-2 after:pointer-events-none after:transition-all peer-disabled:after:border-transparent peer-placeholder-shown:leading-[3.75] text-gray-500 peer-focus:text-gray-900 before:border-blue-gray-200 peer-focus:before:!border-gray-900 after:border-blue-gray-200 peer-focus:after:!border-gray-900\">\n              Flight Number\n            </label>\n          </div>\n        </div>\n        <br></br>\n        <div className=\"relative w-full min-w-[200px] h-10\">\n          <input\n            className=\"peer w-full h-full bg-gray-100 text-blue-gray-700 font-sans font-normal outline outline-0 focus:outline-0 disabled:bg-blue-gray-50 disabled:border-0 transition-all placeholder-shown:border placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 border focus:border-2 border-t-transparent focus:border-t-transparent text-sm px-3 py-2.5 rounded-[7px] border-blue-gray-200 focus:border-gray-600 shadow-sm\"\n            placeholder=\"\"\n            onChange={(evt) => doDateChange(evt)}\n            type=\"text\"\n            value={input.date}\n          />\n          <label className=\"flex w-full h-full select-none pointer-events-none absolute left-0 font-normal !overflow-visible truncate peer-placeholder-shown:text-blue-gray-500 leading-tight peer-focus:leading-tight peer-disabled:text-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500 transition-all -top-1.5 peer-placeholder-shown:text-sm text-[11px] peer-focus:text-[11px] before:content[' '] before:block before:box-border before:w-2.5 before:h-1.5 before:mt-[6.5px] before:mr-1 peer-placeholder-shown:before:border-transparent before:rounded-tl-md before:border-t peer-focus:before:border-t-2 before:border-l peer-focus:before:border-l-2 before:pointer-events-none before:transition-all peer-disabled:before:border-transparent after:content[' '] after:block after:flex-grow after:box-border after:w-2.5 after:h-1.5 after:mt-[6.5px] after:ml-1 peer-placeholder-shown:after:border-transparent after:rounded-tr-md after:border-t peer-focus:after:border-t-2 after:border-r peer-focus:after:border-r-2 after:pointer-events-none after:transition-all peer-disabled:after:border-transparent peer-placeholder-shown:leading-[3.75] text-gray-500 peer-focus:text-gray-900 before:border-blue-gray-200 peer-focus:before:!border-gray-900 after:border-blue-gray-200 peer-focus:after:!border-gray-900\">\n            Flight Date (YYYY-MM-DD)\n          </label>\n        </div>\n        <br></br>\n        <button\n          type=\"submit\"\n          className=\"shadow-sm inline-block px-5 py-2 mx-auto text-white bg-blue-500 rounded-full hover:bg-blue-600 md:mx-0 font-semibold w-full\"\n          onClick={(evt) => doSubmitClick(evt)}\n          value=\"Submit\"\n        >\n          Submit\n        </button>\n      </form>\n      {prediction.showBox ? (\n        <div\n          className={`absolute pl-5 ${getBoxColor(\n            prediction.predictionNumber\n          )} bg-opacity-100 w-96 rounded-md h-20 flex justify-between items-center`}\n        >\n          <p\n            className={`font-medium ${getTextColor(\n              prediction.predictionNumber\n            )}`}\n          >\n            {handlePredictionText(prediction.predictionNumber)}\n          </p>\n          <svg\n            onClick={hidePrediction}\n            className={`fill-current h-6 w-6 ${getCloseColor(\n              prediction.predictionNumber\n            )} mx-5`}\n            role=\"button\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\"\n          >\n            <title>Close</title>\n            <path d=\"M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z\" />\n          </svg>\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n",
        "start": 2296,
        "end": 2320
      }
    }
  ]
}